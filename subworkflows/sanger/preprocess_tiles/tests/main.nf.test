// nf-core subworkflows test preprocess_tiles
nextflow_workflow {

    name "Test Subworkflow PREPROCESS_TILES"
    script "../main.nf"
    workflow "PREPROCESS_TILES"
    config "./nextflow.config"

    tag "subworkflows"
    tag "subworkflows_sanger"
    tag "subworkflows/preprocess_tiles"


    test("preprocess_tiles - xml - no_decon") {

        when {
            params {
                generatecompanion_args = "--master_file Index.idx.xml "
                preprocess_args = "--master_file Index.idx.xml"
            }
            workflow {
                """
                input[0] = [
                    [ id:'xml_no-decon' ], // meta map
                    0,
                    file(params.modules_testdata_base_path + 'PerkinElmer/Hoechst__2023-03-07T10_17_54-Measurement 2/Images/', checkIfExists: true),
                ]
                input[1] = file(params.modules_testdata_base_path + 'PSFs/', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

    test("preprocess_tiles - xml - decon_10") {

        when {
            params {
                generatecompanion_args = "--master_file Index.idx.xml "
                preprocess_args = "--master_file Index.idx.xml -iterations 10"
            }
            workflow {
                """
                input[0] = [
                    [ id:'xml_decon' ], // meta map
                    0,
                    file(params.modules_testdata_base_path + 'PerkinElmer/Hoechst__2023-03-07T10_17_54-Measurement 2/Images/', checkIfExists: true),
                ]
                input[1] = file(params.modules_testdata_base_path + 'PSFs/', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}
