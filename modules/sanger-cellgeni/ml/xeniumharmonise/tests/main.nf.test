
nextflow_process {

    name "Test Process ML_XENIUMHARMONISE"
    script "../main.nf"
    process "ML_XENIUMHARMONISE"

    tag "modules"
    tag "modules_sangercellgeni"
    tag "ml"
    tag "ml/xeniumharmonise"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("xeniumharmonise - test") {

        
        when {
            process {
                """
                
                input[0] = [
                    [ id:'xeniumharmonise_test' ], // meta map
                    file(params.modules_testdata_base_path + '/0043607 - BK30-SKI-27-FO-3-s3 - 2024-10-23 11.28.38.ndpi', checkIfExists: true),
                    file(params.modules_testdata_base_path + '/output-XETG00155__0043607__BK30-SKI-27-FO-3-S3__20241010__133127/', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
               
            )
        }

    }

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used but keep the " - stub" suffix.
    test("xeniumharmonise - run - stub") {

        options "-stub"

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = [
                    [ id:'xeniumharmonise_test' ], // meta map
                    file(params.modules_testdata_base_path + '/0043607 - BK30-SKI-27-FO-3-s3 - 2024-10-23 11.28.38.ndpi', checkIfExists: true),
                    file(params.modules_testdata_base_path + '/output-XETG00155__0043607__BK30-SKI-27-FO-3-S3__20241010__133127/', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                
            )
        }

    }
}
