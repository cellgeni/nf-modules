// nf-core modules test imaging/postcodepost
nextflow_process {

    name "Test Process IMAGING_POSTCODEPOST"
    script "../main.nf"
    process "IMAGING_POSTCODEPOST"

    tag "modules"
    tag "modules_sangercellgeni"
    tag "imaging"
    tag "imaging/postcodepost"

    test("predict - empty") {

        when {
            params.module_args = ''
            process {
                """
                input[0] = [
                    [ id:'merfish_1'],
                    file(params.modules_testdata_base_path + 'POSTCODE/merfish_1_model_params_and_losses.pt', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/for_decoding/merfish_1_starfish_codebook.json', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/merfish_transcript_locations_1.csv', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                // { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("predict - merfish_100000") {

        when {
            params.module_args = ''
            process {
                """
                input[0] = [
                    [ id:'merfish_100000'],
                    file(params.modules_testdata_base_path + 'POSTCODE/merfish_100000_model_params_and_losses.pt', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/for_decoding/merfish_100000_starfish_codebook.json', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/merfish_transcript_locations_100000.csv', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("predict - merfish_100000 - stub") {

        options "-stub"

        when {
            params.module_args = ''
            process {
                """
                input[0] = [
                    [ id:'stub' ], // meta map
                    file(params.modules_testdata_base_path + 'POSTCODE/merfish_100000_model_params_and_losses.pt', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/for_decoding/merfish_100000_starfish_codebook.json', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'MERFISH/merfish_transcript_locations_100000.csv', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
