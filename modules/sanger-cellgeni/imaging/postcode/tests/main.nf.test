// nf-core modules test imaging/postcode
nextflow_process {

    name "Test Process IMAGING_POSTCODE"
    script "../main.nf"
    process "IMAGING_POSTCODE"

    tag "modules"
    tag "modules_sanger"
    tag "imaging"
    tag "imaging/postcode"

    test("iss - csv") {

        when {
            params {
                module_args = '--codebook_targer_col L-probe --codebook_code_col code'
            }
            process {
                """
                input[0] = [
                    [ id:'iss_test'],
                    file(params.modules_testdata_base_path + 'iss_peak_profile_sample.npy', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'iss_peak_locations_sample.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'iss_codebook.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'dummy.txt', checkIfExists: false),
                    6
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("merfish - csv") {

        when {
            params {
                module_args = '--codebook_targer_col Gene --codebook_code_col Code --coding_col_prefix Readout_*'
            }
            process {
                """
                input[0] = [
                    [ id:'merfish_test'],
                    file(params.modules_testdata_base_path + 'merfish_peak_profile_sample.npy', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_peak_locations_sample.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_codebook.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_readouts.csv', checkIfExists: true),
                    9
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("stub") {

        options "-stub"
        
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [
                    [ id:'merfish_test'],
                    file(params.modules_testdata_base_path + 'merfish_peak_profile_sample.npy', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_peak_locations_sample.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_codebook.csv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'merfish_readouts.csv', checkIfExists: true),
                    7
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
