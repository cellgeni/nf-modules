---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "imaging_postcode"
description: write your description here
keywords:
  - sort
  - example
  - genomics
tools:
  - "imaging":
      description: "Probabilistic image-based spatial transcriptomics decoder"
      homepage: "https://github.com/gerstung-lab/postcode"
      documentation: "https://github.com/gerstung-lab/postcode"
      tool_dev_url: "https://github.com/gerstung-lab/postcode"
      doi: "no DOI available"
      licence: [MIT]
      identifier: ""

input:
  # Only when we have meta
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'sample1', single_end:false ]`

    - peak_profiles:
        type: file
        description: |
          The extracted peak profiles from the image with shape (n_peaks, n_channels)
          Or (n_peaks, n_channels, n_rounds)
          Structure: [ val(meta), path(peak_profiles) ]
        pattern: "*.{xlsx/csv}"

    - peak_loc:
        type: file
        description: |
          The corresponding peak locations of the extracted peak profiles
          Structure: [ val(meta), path(codebook) ]
        pattern: "*.{xlsx/csv}"

    - codebook:
        type: file
        description: |
          Codebook to support decoding
          Structure: [ val(meta), path(codebook) ]
        pattern: "*.{xlsx/csv}"

output:
  - decoded_peaks:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1' ]`

      - decoded_peaks:
          type: file
          description: |
            Decoded peaks from the image
            Structure: path(decoded_peaks)

  - pickle:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1' ]`
      - pickle:
          type: file
          description: |
            File containing software versions
            Structure: path(pickle)
          pattern: "*decode_out_parameters.pickle"

  - versions:
      - "versions.yml":
          type: file
          description: File containing software versions
          pattern: "versions.yml"

authors:
  - "@BioinfoTongLI"
maintainers:
  - "@BioinfoTongLI"
